FORMAT: 1A
HOST: http://api.skladon.cz/v1/

# skladon

Skadon API

## Address Validation Collection [/validation/address-validation]
### List All Address Validation [POST]

+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "city": "Cliffside Park", 
            "stateCode":"NJ", 
            "postalCode":"07010"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "valid"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400,
                "text": "invalid"
            }
        }   
        
        
## Create Order Collection [/order/create-order]
### Create Order [POST]

+ Request (application/json)

        {
            "skladonAuth":{
                "apiKey":"a4de2249-5dal-243v-8r99-623cc54b9616"
        
            },
            "order":{
                "shipTo":{
                    "recipient": {
                        "fullName": "Miloš Halecký",
                        "attentionName": "Miloš Halecký",
                        "address": {
                            "street": "Chemická 955/3",
                            "additionalInformation": "second floor"
                        },
                        "city": "Prague",
                        "countryCode": "CZ",
                        "provinceCode": "CZ",
                        "postCode": "14800",
                        "email": "milos.halecky@gmail.com",
                        "companyName": "",
                        "companyId": "",
                        "taxId": "",
                        "phone": "00420735019429"
                    },
                    "billing": {
                        "fullName": "Miloš Halecký",
                        "attentionName": "Miloš Halecký",
                        "street": "Chemická 955/3",
                        "city": "Prague",
                        "countryCode": "CZ",
                        "provinceCode": "CZ",
                        "postCode": "14800",
                        "email": "milos.halecky@gmail.com",
                        "companyName": "",
                        "companyId": "",
                        "taxId": "",
                        "phone": "00420735019429"
                    }
                },
                "invoice": {
                    "invoiceNumber":"40002017",
                    "invoiceDate":"20171231",
                    "format":"html",
                    "encoding": "base64",
                    "data":"JVBERi0xLjUNJabpz8QgDTkzNCAwIG9iag08PC9MaW5lYXJpemVkIDEvTyA5MzcvSCBbIDgxNSAz"
                },
                "discount":{
                    "type":"PER",
                    "value":"0"
                },
                "paid": 1,
                "price":{
                    "invoicePrice":{
                        "value":"94.00",
                        "currency":"USD"
                    },
                    "shippingPrice":{
                        "value":"4",
                        "currency":"USD"
                    }   
                },
                "shippingMethod":"DEL",
                "shipper":{
                    "name":"UPS",
                    "serviceCode": "65"
                        
                },
                "products":[
                    {
                        "productCode":"1",
                        "count":1,
                        "productPrice":"22",
                        "productCurrency":"USD"
                    }

                ]
            }
        } 
        


+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "success"
            },
            "response": {
                "message": "order successfully created",
                "invoiceNumber": "40002017"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 401,
                "text": "error"
            },
            "response":{
                "message": "Order already exists",
                "invoiceNumber": "40002017"
            }
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 402,
                "text": "error"
            },
            "response": {
                "message": "count of products is less then you need or you don't have any of them stored",
                "products": [1,2]
            }
        }
        
        
## Order State Collection [/order/order-state]
### Order State [POST]
###### on the way: 300
###### delivered: 301
###### accepted: 302
###### in process: 303
###### not delivered: 304
###### lost: 305
###### refunded: 306
###### canceled: 307


+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 300,
                "text": ""
            },
            "tracking": {
                "number": "tracking_number"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 301,
                "text": ""
            },
            "tracking": {
                "number": "tracking_number"
            }
        }        
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 302,
                "text": ""
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 303,
                "text": ""
            }
        }
        
## Changes in order state changing Collection [/your-url/{invoiceNumber}]
### List All in order state changing [GET]
###### response code 200: OK
###### response code 500: ERROR
###### response code 400: ORDER-NUMBER DOES NOT EXIST

+ Parameters
    + invoiceNumber (number) - Order Number
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "some-text"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 500,
                "text": "some-text"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400
                "text": "some-text"
            }
        }

## Order Cancellation  [/order/order-cancellation/]
### Order Cancellation [POST]

+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            },
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "order successfully cancelled"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400,
                "text": "cannot cancel order, reasons: no order found, order was cancelled yet or order is on the way to client"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }        
        
## Product Availability  [/product/products-availability]
### Product Availability [POST]

+ Request (application/json) 

        {
            "skladonAuth":{
                "apiKey":"a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "products": [
                {
                "productCode":"1"
                }
            ]
        
        }

+ Response 200 (application/json)

        {
            "status": {
                "text": "count of products",
                "code": 200
            },
            "products": [
                {
                    "status": {
                        "text": "available",
                        "statusCode": 1
                    },
                    "productCode": "1",
                    "count": 7
                }
            ]
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "text": "no products found",
                "code": 300
            },
            "products": []
        }