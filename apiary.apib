FORMAT: 1A
HOST: https://api.skladon.cz/v1/

# skladon

Skadon API
Production API url: https://api.skladon.cz/v1/
Test API url: https://test-api.skladon.cz/v1/


## Address Validation Collection [/validation/address-validation]
### List All Address Validation (only for UPS - USA addresses!) [POST]
###### status code 200: valid
###### status code 400: invalid

+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "city": "Cliffside Park", 
            "stateCode":"NJ", 
            "postalCode":"07010"
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "valid"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400,
                "text": "invalid"
            }
        }   
        
        
## Create Order Collection [/order/create-order]
### Create Order [POST]
###### status code 200: order successfully created
###### status code 401: order already exists
###### status code 402: number of products is less then you need or you don't have any of them stored
###### Order is validated. 

###### Object properties: 
- orderId: 255 (number, required) - The unique identifier for the order
- message: "Extra stickers ..." (string, required) - Order message for stock-keeper or just left empty string
- shipTo: {} (object, required)
    - recipient: {} (object, required)
        - fullName: Miloš Halecký (string, required) - Person name and surname
        - attentionName: Miloš Halecký (string, required) - Person Attention name and surname
        - address: {} (object, required)
            - street: Chemická 955/3 (string, required) - Street
            - additionalInformation: second floor (string, reguired) - Additional information or empty string
        - city: Prague (string, required) - City name
        - countryCode: CZ (string, required) - country code
        - provinceCode: CZ (string, required) - province code
        - postCode: 14800 (string, required) - postal code 
        - email: milos.halecky@gmail.com (string, required) - email address
        - companyName: "Company name" (string, required) - company name or empty string
        - companyId: "12345678" (string, required) - company id or empty string
        - taxId: "12345678" (string, required) - company tax id or empty string
        - phone: "00420123123123" (string, required) - phone number in 14 digits format
    - billing: {} (object, required)
        - fullName: Miloš Halecký (string, required) - Person name and surname
        - attentionName: Miloš Halecký (string, required) - Person Attention name and surname
        - street: Chemická 955/3 (string, required) - Street
        - city: Prague (string, required) - City name
        - countryCode: CZ (string, required) - country code
        - provinceCode: CZ (string, required) - province code
        - postCode: 14800 (string, required) - postal code 
        - email: milos.halecky@gmail.com (string, required) - email address
        - companyName: "Company name" (string, required) - company name or empty string
        - companyId: "12345678" (string, required) - company id or empty string
        - taxId: "12345678" (string, required) - company tax id or empty string
        - phone: "00420123123123" (string, required) - phone number in 14 digits format
- invoice: {} (object, optional)
    - invoiceNumber: 40002017 (string, required) - invoice number
    - invoiceDate: 20171231 (string, required) - invoice date format: YYYYMMDD
    - format: pdf (string, required) - invoice format or empty string
    - encoding: base64 (string, required) - invoice data encoding or empty string
    - data: JVBERi0xLjUNJabpz8QgDTkzNCAwIG9iag08PC9... (string, required) - invoice data or empty string

- discount: {} (object, required) - if skladon should provide discount, it has to be discussed otherwise set 0 to value
    - type: PER (string, required) - type of discount, PER = percentage
    - value: 0 (integer, required) - value of discount

- paid: 1 (integer, required) - 1 = paid, 0 = cash on delivery

- price: {} (object, required)
    - invoicePrice: {} (object, required)
        - value: 50 (integer, required) - ivoice price value
        - currency: USD (string, required) - invoice price currency 
    - shippingPrice: {} (object, required)
        - value: 4.00 (number, required) -  shipping price
        - currency: USD (string, required) - shipping price currency 
    - cashOnDelivery: {} (object, optional) - COD Cash On Delivery
        - value: 4.00 (number, required) -  COD price, Cash On Delivery order price
        - currency: USD (string, required) - COD price currency 
        - refNumber: variabilny symbol (string, required) - reference number for bank

- shippingMethod: DEL (string, required) -  shipping method: DEL = Delivery, PER = Personally. Available = DEL, PER

- shipper: {} (object, required)
    - name: UPS (string, required) - shipper name according table. Available = UPS, CP of GLS
    - serviceCode: UPSES (string, required) - shipper service code according table. Available = UPSES, CPDR, CPDRCOD, CPNP, CPNPCOD, RRCZ, RRCZCOD, RREU, RRWR, GLSCZ, GLSCZCOD, GLSEU, GLSEUCOD, TGCZ, TGCZCOD, TGEU or TGEUCOD

- products: [] (array, required)
    - productCode: 1 (string, requried) - The unique identifier, code of product
    - count: 1 (integer, required) - Count of same products
    - productPrice: 22 (number, required) - price of one certain product
    - productCurrency: USD (string, required) - product price currencyta


+ Request (application/json)

        {
            "skladonAuth":{
                "apiKey":"a4de2249-5dal-243v-8r99-623cc54b9616"
        
            },
            "order":{
                "orderId": "255",
                "message": "message text",
                "shipTo":{
                    "recipient": {
                        "fullName": "Miloš Halecký",
                        "attentionName": "Miloš Halecký",
                        "address": {
                            "street": "Chemická 955/3",
                            "additionalInformation": "second floor"
                        },
                        "city": "Prague",
                        "countryCode": "CZ",
                        "provinceCode": "CZ",
                        "postCode": "14800",
                        "email": "milos.halecky@gmail.com",
                        "companyName": "",
                        "companyId": "",
                        "taxId": "",
                        "phone": "00420123123123"
                    },
                    "billing": {
                        "fullName": "Miloš Halecký",
                        "attentionName": "Miloš Halecký",
                        "street": "Chemická 955/3",
                        "city": "Prague",
                        "countryCode": "CZ",
                        "provinceCode": "CZ",
                        "postCode": "14800",
                        "email": "milos.halecky@gmail.com",
                        "companyName": "",
                        "companyId": "",
                        "taxId": "",
                        "phone": "00420735019429"
                    }
                },
                "invoice": {
                    "invoiceNumber":"40002017",
                    "invoiceDate":"20171231",
                    "format":"pdf",
                    "encoding": "base64",
                    "data":"JVBERi0xLjUNJabpz8QgDTkzNCAwIG9iag08PC9MaW5lYXJpemVkIDEvTyA5MzcvSCBbIDgxNSAz"
                },
                "discount":{
                    "type":"PER",
                    "value":"0"
                },
                "paid": 0,
                "price":{
                    "invoicePrice":{
                        "value":"1100.00",
                        "currency":"CZK"
                    },
                    "shippingPrice":{
                        "value":"100.00",
                        "currency":"CZK"
                    },
                    "cashOnDelivery":{
                        "value":"1100.00",
                        "currency":"USD",
                        "refNumber":"variabilny symbol"
                    }
                },
                "shippingMethod":"DEL",
                "shipper":{
                    "name":"UPS",
                    "serviceCode": "UPSES"
                        
                },
                "products":[
                    {
                        "productCode":"1",
                        "count":1,
                        "productPrice":"22",
                        "productCurrency":"USD"
                    }

                ]
            }
        } 
        


+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "success"
            },
            "response": {
                "message": "order successfully created",
                "invoiceNumber": "40002017"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 401,
                "text": "error"
            },
            "response":{
                "message": "Order already exists",
                "invoiceNumber": "40002017"
            }
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 402,
                "text": "error"
            },
            "response": {
                "message": "number of products is less then you need or you don't have any of them stored",
                "products": [1,2]
            }
        }
        
+ Response 400 (application/json)

        {
            "name": {
                "code": 403,
                "text": "ValidationError"
            },
            "response": {
                "details": [
                    {
                        "message": "\"fullName\" is required",
                        "path": "order.shipTo.recipient.fullName",
                        "type": "any.required",
                        "context": {
                            "key": "fullName"
                        }
                    }
                ],
                "body": {
                    "skladonAuth": "automatically hidden",
                    "order": {
                        "orderId": "255",
                        "message": "message text",
                        "shipTo": {
                            "recipient": {
                                "attentionName": "Miloš Halecký",
                                "address": {
                                    "street": "Chemická 955/3",
                                    "additionalInformation": "second floor"
                                },
                                "city": "Prague",
                                "countryCode": "CZ",
                                "provinceCode": "",
                                "postCode": "14800",
                                "email": "milos.halecky@gmail.com",
                                "companyName": "",
                                "companyId": "",
                                "taxId": "",
                                "phone": "00420123123123"
                            },
                            "billing": {
                                "fullName": "Miloš Halecký",
                                "attentionName": "Miloš Halecký",
                                "street": "Chemická 955/3",
                                "city": "Prague",
                                "countryCode": "CZ",
                                "provinceCode": "",
                                "postCode": "14800",
                                "email": "milos.halecky@gmail.com",
                                "companyName": "",
                                "companyId": "",
                                "taxId": "",
                                "phone": "00420123123123"
                            }
                        },
                        "invoice": {
                            "invoiceNumber":"40002017",
                            "invoiceDate":"20171231",
                            "format":"pdf",
                            "encoding": "base64",
                            "data":"JVBERi0xLjUNJabpz8QgDTkzNCAwIG9iag08PC9MaW5lYXJpemVkIDEvTyA5MzcvSCBbIDgxNSAz"
                        },
                        "discount": {
                            "type": "PER",
                            "value": 0
                        },
                        "paid": 0,
                        "price":{
                            "invoicePrice":{
                                "value":"840.00",
                                "currency":"CZK"
                            },
                            "shippingPrice":{
                                "value":"40.00",
                                "currency":"CZK"
                            },
                            "cashOnDelivery":{
                                "value":"840.00",
                                "currency":"USD",
                                "refNumber":"variabilny symbol"
                            }
                        },
                        "shippingMethod": "DEL",
                        "shipper": {
                            "name": "UPS",
                            "serviceCode": "UPSES"
                        },
                        "products": [
                            {
                                "productCode":"1",
                                "count":1,
                                "productPrice":"22",
                                "productCurrency":"USD"
                            }
                        ]
                    }
                }
            }
        }
        
        
## Order State Collection [/order/order-state]
### Order State [POST]
###### status code 300: on the way 
###### status code 301: delivered
###### status code 302: accepted
###### status code 303: in process
###### status code 304: not delivered
###### status code 305: lost
###### status code 306: refunded
###### status code 307: canceled


+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 300,
                "text": ""
            },
            "tracking": {
                "number": "tracking_number"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 301,
                "text": ""
            },
            "tracking": {
                "number": "tracking_number"
            }
        }        
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 302,
                "text": ""
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 303,
                "text": ""
            }
        }
        
## Changes in order state changing Collection [/your-url/{orderID}]
### List All in order state changing [GET]
###### status code 200: OK
###### status code 500: ERROR
###### status code 400: ORDER-NUMBER DOES NOT EXIST

+ Parameters
    + orderID (number) - Order ID
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "some-text"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 500,
                "text": "some-text"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400
                "text": "some-text"
            }
        }

## Order Cancellation  [/order/order-cancellation/]
### Order Cancellation [POST]
######  status code 200: order successfully cancelled
######  status code 400: cannot cancel order, reasons: no order found, order was cancelled yet or order is on the way to client

+ Request (application/json)

        {
            "skladonAuth": {
                "apiKey": "a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            },
        }

+ Response 200 (application/json)

        {
            "status": {
                "code": 200,
                "text": "order successfully cancelled"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "code": 400,
                "text": "cannot cancel order, reasons: no order found, order has been cancelled or order is already packaged"
            },
            "invoice": {
                    "invoiceNumber":"40002017"
            }
        }        
        
## Product Availability  [/product/products-availability]
### Product Availability [POST]
######  status code 200: product is available, showen count of stored product
######  status code 300: products not founddescripton

+ Request (application/json) 

        {
            "skladonAuth":{
                "apiKey":"a4de2249-5dal-243v-8r99-623cc54b9616"
            },
            "products": [
                {
                "productCode":"1
                }
            ]
        
        }

+ Response 200 (application/json)

        {
            "status": {
                "text": "count of products",
                "code": 200
            },
            "products": [
                {
                    "status": {
                        "text": "available",
                        "statusCode": 1
                    },
                    "productCode": "1",
                    "count": 7
                }
            ]
        }
        
+ Response 200 (application/json)

        {
            "status": {
                "text": "no products found",
                "code": 300
            },
            "products": []
        }